error: lifetime may not live long enough
  --> $DIR/hr-subtype.rs:48:13
   |
LL | / macro_rules! check {
LL | |     ($rev:ident: ($t1:ty, $t2:ty)) => {
LL | |         #[cfg($rev)]
LL | |         fn subtype<'x, 'y: 'x, 'z: 'y>() {
   | |                    --  -- lifetime `'y` defined here
   | |                    |
   | |                    lifetime `'x` defined here
LL | |             gimme::<$t2>(None::<$t1>);
   | |             ^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'x` must outlive `'y`
...  |
LL | |     };
LL | | }
   | |_- in this expansion of `check!`
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
   |
   = help: consider adding the following bound: `'x: 'y`
   = note: requirement occurs because of the type `Inv<'_>`, which makes the generic argument `'_` invariant
   = note: the struct `Inv<'a>` is invariant over the parameter `'a`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

error: lifetime may not live long enough
  --> $DIR/hr-subtype.rs:54:13
   |
LL | / macro_rules! check {
LL | |     ($rev:ident: ($t1:ty, $t2:ty)) => {
LL | |         #[cfg($rev)]
LL | |         fn subtype<'x, 'y: 'x, 'z: 'y>() {
...  |
LL | |         fn supertype<'x, 'y: 'x, 'z: 'y>() {
   | |                      --  -- lifetime `'y` defined here
   | |                      |
   | |                      lifetime `'x` defined here
LL | |             gimme::<$t1>(None::<$t2>);
   | |             ^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'x` must outlive `'y`
...  |
LL | |     };
LL | | }
   | |_- in this expansion of `check!`
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
   |
   = help: consider adding the following bound: `'x: 'y`
   = note: requirement occurs because of the type `Inv<'_>`, which makes the generic argument `'_` invariant
   = note: the struct `Inv<'a>` is invariant over the parameter `'a`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

error: aborting due to 2 previous errors

