warning: byte slice in a packed struct that derives a built-in trait
  --> $DIR/deriving-with-repr-packed.rs:31:5
   |
LL | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
LL |     data: [u8],
   |     ^^^^^^^^^^
  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL
   |
   = note: in this expansion of `#[derive(Debug)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #107457 <https://github.com/rust-lang/rust/issues/107457>
   = help: consider implementing the trait by hand, or remove the `packed` attribute
   = note: `#[warn(byte_slice_in_packed_struct_with_derive)]` on by default

warning: string slice in a packed struct that derives a built-in trait
  --> $DIR/deriving-with-repr-packed.rs:41:5
   |
LL | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
LL |     data: str,
   |     ^^^^^^^^^
  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL
   |
   = note: in this expansion of `#[derive(Debug)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #107457 <https://github.com/rust-lang/rust/issues/107457>
   = help: consider implementing the trait by hand, or remove the `packed` attribute

error[E0507]: cannot move out of `self` which is behind a shared reference
  --> $DIR/deriving-with-repr-packed.rs:22:10
   |
LL | #[derive(Debug, Default)]
   |          ----- in this derive macro expansion
LL | #[repr(packed)]
LL | struct X(Y);
   |          ^ move occurs because `self.0` has type `Y`, which does not implement the `Copy` trait
  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL
   |
   = note: in this expansion of `#[derive(Debug)]`

error: aborting due to previous error; 2 warnings emitted

For more information about this error, try `rustc --explain E0507`.
Future incompatibility report: Future breakage diagnostic:
warning: byte slice in a packed struct that derives a built-in trait
  --> $DIR/deriving-with-repr-packed.rs:31:5
   |
LL | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
LL |     data: [u8],
   |     ^^^^^^^^^^
  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL
   |
   = note: in this expansion of `#[derive(Debug)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #107457 <https://github.com/rust-lang/rust/issues/107457>
   = help: consider implementing the trait by hand, or remove the `packed` attribute
   = note: `#[warn(byte_slice_in_packed_struct_with_derive)]` on by default

Future breakage diagnostic:
warning: string slice in a packed struct that derives a built-in trait
  --> $DIR/deriving-with-repr-packed.rs:41:5
   |
LL | #[derive(Debug)]
   |          ----- in this derive macro expansion
...
LL |     data: str,
   |     ^^^^^^^^^
  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL
   |
   = note: in this expansion of `#[derive(Debug)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #107457 <https://github.com/rust-lang/rust/issues/107457>
   = help: consider implementing the trait by hand, or remove the `packed` attribute
   = note: `#[warn(byte_slice_in_packed_struct_with_derive)]` on by default

