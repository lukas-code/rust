error[E0412]: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:9:1
   |
LL | generate_mod::check!();
   | ^^^^^^^^^^^^^^^^^^^^^^
   | |
   | not found in this scope
   | in this macro invocation
   |
  ::: $DIR/auxiliary/generate-mod.rs:12:1
   |
LL | pub fn check(_: TokenStream) -> TokenStream {
   | ------------------------------------------- in this expansion of `generate_mod::check!`
   |
   = help: consider importing this struct:
           FromOutside

error[E0412]: cannot find type `Outer` in this scope
  --> $DIR/generate-mod.rs:9:1
   |
LL | generate_mod::check!();
   | ^^^^^^^^^^^^^^^^^^^^^^
   | |
   | not found in this scope
   | in this macro invocation
   |
  ::: $DIR/auxiliary/generate-mod.rs:12:1
   |
LL | pub fn check(_: TokenStream) -> TokenStream {
   | ------------------------------------------- in this expansion of `generate_mod::check!`
   |
   = help: consider importing this struct:
           Outer

error[E0412]: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:12:1
   |
LL | #[generate_mod::check_attr]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   | |
   | not found in this scope
   | in this procedural macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:24:1
   |
LL | pub fn check_attr(_: TokenStream, _: TokenStream) -> TokenStream {
   | ---------------------------------------------------------------- in this expansion of `#[generate_mod::check_attr]`
   |
   = help: consider importing this struct:
           FromOutside

error[E0412]: cannot find type `OuterAttr` in this scope
  --> $DIR/generate-mod.rs:12:1
   |
LL | #[generate_mod::check_attr]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   | |
   | not found in this scope
   | in this procedural macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:24:1
   |
LL | pub fn check_attr(_: TokenStream, _: TokenStream) -> TokenStream {
   | ---------------------------------------------------------------- in this expansion of `#[generate_mod::check_attr]`
   |
   = help: consider importing this struct:
           OuterAttr

error: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:16:10
   |
LL | #[derive(generate_mod::CheckDerive)]
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          names from parent modules are not accessible without an explicit import
   |          in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
   = note: `#[deny(proc_macro_derive_resolution_fallback)]` on by default

error: cannot find type `OuterDerive` in this scope
  --> $DIR/generate-mod.rs:16:10
   |
LL | #[derive(generate_mod::CheckDerive)]
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          names from parent modules are not accessible without an explicit import
   |          in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>

error: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:23:14
   |
LL |     #[derive(generate_mod::CheckDerive)]
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^
   |              |
   |              names from parent modules are not accessible without an explicit import
   |              in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>

error: cannot find type `OuterDerive` in this scope
  --> $DIR/generate-mod.rs:23:14
   |
LL |     #[derive(generate_mod::CheckDerive)]
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^
   |              |
   |              names from parent modules are not accessible without an explicit import
   |              in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0412`.
Future incompatibility report: Future breakage diagnostic:
error: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:16:10
   |
LL | #[derive(generate_mod::CheckDerive)]
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          names from parent modules are not accessible without an explicit import
   |          in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
   = note: `#[deny(proc_macro_derive_resolution_fallback)]` on by default

Future breakage diagnostic:
error: cannot find type `OuterDerive` in this scope
  --> $DIR/generate-mod.rs:16:10
   |
LL | #[derive(generate_mod::CheckDerive)]
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          names from parent modules are not accessible without an explicit import
   |          in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
   = note: `#[deny(proc_macro_derive_resolution_fallback)]` on by default

Future breakage diagnostic:
error: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:23:14
   |
LL |     #[derive(generate_mod::CheckDerive)]
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^
   |              |
   |              names from parent modules are not accessible without an explicit import
   |              in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
   = note: `#[deny(proc_macro_derive_resolution_fallback)]` on by default

Future breakage diagnostic:
error: cannot find type `OuterDerive` in this scope
  --> $DIR/generate-mod.rs:23:14
   |
LL |     #[derive(generate_mod::CheckDerive)]
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^
   |              |
   |              names from parent modules are not accessible without an explicit import
   |              in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:36:1
   |
LL | pub fn check_derive(_: TokenStream) -> TokenStream {
   | -------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDerive)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
   = note: `#[deny(proc_macro_derive_resolution_fallback)]` on by default

Future breakage diagnostic:
warning: cannot find type `FromOutside` in this scope
  --> $DIR/generate-mod.rs:30:10
   |
LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          names from parent modules are not accessible without an explicit import
   |          in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:48:1
   |
LL | pub fn check_derive_lint(_: TokenStream) -> TokenStream {
   | ------------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDeriveLint)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
note: the lint level is defined here
  --> $DIR/generate-mod.rs:30:10
   |
LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:48:1
   |
LL | pub fn check_derive_lint(_: TokenStream) -> TokenStream {
   | ------------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDeriveLint)]`

Future breakage diagnostic:
warning: cannot find type `OuterDeriveLint` in this scope
  --> $DIR/generate-mod.rs:30:10
   |
LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          names from parent modules are not accessible without an explicit import
   |          in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:48:1
   |
LL | pub fn check_derive_lint(_: TokenStream) -> TokenStream {
   | ------------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDeriveLint)]`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>
note: the lint level is defined here
  --> $DIR/generate-mod.rs:30:10
   |
LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ in this derive macro expansion
   |
  ::: $DIR/auxiliary/generate-mod.rs:48:1
   |
LL | pub fn check_derive_lint(_: TokenStream) -> TokenStream {
   | ------------------------------------------------------- in this expansion of `#[derive(generate_mod::CheckDeriveLint)]`

