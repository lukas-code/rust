error[E0502]: cannot borrow `heap` as immutable because it is also borrowed as mutable
  --> $DIR/issue-47646.rs:9:30
   |
LL |     let borrow = heap.peek_mut();
   |                  ---- mutable borrow occurs here
LL |
LL |     match (borrow, ()) {
   |           ------------ a temporary with access to the mutable borrow is created here ...
LL |         (Some(_), ()) => {
LL |             println!("{:?}", heap);
   |             -----------------^^^^-
   |             |                |
   |             |                immutable borrow occurs here
   |             in this macro invocation (#1)
...
LL |     };
   |      - ... and the mutable borrow might be used here, when that temporary is dropped and runs the destructor for type `(Option<PeekMut<'_, i32>>, ())`
  --> $SRC_DIR/std/src/macros.rs:LL:COL
   |
   = note: in this expansion of `println!` (#1)
  ::: $SRC_DIR/std/src/macros.rs:LL:COL
   |
   = note: in this macro invocation (#2)
  --> $SRC_DIR/core/src/macros/mod.rs:LL:COL
   |
   = note: in this expansion of `$crate::format_args_nl!` (#2)

error: aborting due to previous error

For more information about this error, try `rustc --explain E0502`.
