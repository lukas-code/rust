error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:36:5
   |
LL |     offset_of!(Alpha, z);
   |     -------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `[u8]`

error[E0277]: the size for values of type `(dyn Trait + 'static)` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:37:5
   |
LL |     offset_of!(Beta, z);
   |     ------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `(dyn Trait + 'static)`

error[E0277]: the size for values of type `Extern` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:38:5
   |
LL |     offset_of!(Gamma, z);
   |     -------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `Extern`

error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:40:5
   |
LL |     offset_of!((u8, dyn Trait), 1);
   |     ------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `dyn Trait`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:44:5
   |
LL |     offset_of!(Delta<Alpha>, z);
   |     --------------------------- in this macro invocation
   |
   = help: within `Alpha`, the trait `Sized` is not implemented for `[u8]`
note: required because it appears within the type `Alpha`
  --> $DIR/offset-of-dst-field.rs:5:8
   |
LL | struct Alpha {
   |        ^^^^^

error[E0277]: the size for values of type `Extern` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:45:5
   |
LL |     offset_of!(Delta<Extern>, z);
   |     ---------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `Extern`

error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:46:5
   |
LL |     offset_of!(Delta<dyn Trait>, z);
   |     ------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `dyn Trait`

error[E0277]: the size for values of type `T` cannot be known at compilation time
  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: in this expansion of `offset_of!`
  ::: $SRC_DIR/core/src/mem/mod.rs:LL:COL
   |
   = note: doesn't have a size known at compile-time
   |
  ::: $DIR/offset-of-dst-field.rs:49:29
   |
LL | fn generic_with_maybe_sized<T: ?Sized>() -> usize {
   |                             - this type parameter needs to be `Sized`
LL |     offset_of!(Delta<T>, z)
   |     ----------------------- in this macro invocation
   |
help: consider removing the `?Sized` bound to make the type parameter `Sized`
  --> $DIR/offset-of-dst-field.rs:49:30

LL - fn generic_with_maybe_sized<T: ?Sized>() -> usize {
LL + fn generic_with_maybe_sized<T>() -> usize {
   |

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0277`.
